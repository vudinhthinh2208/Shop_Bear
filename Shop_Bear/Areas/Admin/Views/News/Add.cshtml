@model Shop_Bear.Models.EF.News
@{
    ViewData["title"] = "Thêm Tin Tức";
}
@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a asp-controller="Home" asp-action="Index" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a asp-controller="News" asp-action="Index" class="nav-link">Tin Tức</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a asp-controller="News" asp-action="Add" class="nav-link">Thêm mới </a>
        </li>
    </ul>
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thêm mới tin tức</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Tin tức</a></li>
                    <li class="breadcrumb-item active">Thêm mới</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông Tin </h3>
        </div>
        <div class="card-body">
            <div class="bs-stepper-content">
                @using (Html.BeginForm("Add", "News", FormMethod.Post, new { }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <!-- your steps content here -->
                    <div id="logins-part" class="content active dstepper-block" role="tabpanel" aria-labelledby="logins-part-trigger">
                        <div class="form-group">
                            <label for="exampleInputEmail1">Tiêu đề</label>
                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Tên danh mục" })
                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputFile">Ảnh đại diện</label>
                            <div class="input-group">
                                <div class="custom-file">
                                    @Html.TextBoxFor(x => x.Image, new { @id = "txtImage", @class = "form-control" })
                                </div>
                                <div class="input-group-append">
                                    <input type="button" value="Tải ảnh" onclick="BrowseServer('txtImage');" />
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Mô tả</label>
                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Chi tiết</label>
                            @Html.TextAreaFor(x => x.Detail, new { @class = "form-control", @id="editor" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Hiển thị</label>
                            @Html.CheckBoxFor(x => x.IsActive, new{@checked="@checked"})
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Seo title</label>
                            @Html.TextAreaFor(x => x.SeoTitle, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">SeoDescription</label>
                            @Html.TextAreaFor(x => x.SeoDescription, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">SeoKeywords</label>
                            @Html.TextAreaFor(x => x.SeoKeywords, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <a asp-controller="Category" asp-action="Index" class="btn btn-danger">Quay lại</a>
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </div>

                }

            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">
        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
@section Scripts {
    @{

        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            ClassicEditor
                .create(document.querySelector('#editor'), {
                    ckfinder: {
                        uploadUrl: '/ckfinder/core/connector/aspx?command=QuickUpload&type=Files&responseType=json'
                    },
                    toolbar: ['ckfinder', 'imageUpload', '|', 'heading', '|', 'bold', 'italic', '|', 'undo', 'redo']
                })
                .then(editor => {
                    console.log('Editor was initialized', editor);
                })
                .catch(error => {
                    console.error(error.stack);
                });
        </script>
        <script>
            function BrowseServer(field) {
                CKFinder.modal({
                    chooseFiles: true,
                    width: 800,
                    height: 600,
                    onInit: function (finder) {
                        finder.on('files:choose', function (evt) {
                            var file = evt.data.files.first();
                            document.getElementById(field).value = file.getUrl();
                        });

                        finder.on('file:choose:resizedImage', function (evt) {
                            var file = evt.data.resizedUrl;
                            document.getElementById(field).value = file;
                        });
                    }
                });
            }
        </script>
    }
    }
